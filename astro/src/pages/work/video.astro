---
import PageHeader from "../../components/PageHeader.astro";
import Video from "../../components/Video.astro";
import Layout from "../../layouts/Layout.astro";
import { getDirectusClient } from "../../utils/getDirectusClient";

const directus = await getDirectusClient();

const videos = await directus.singleton("videos").read({
  fields: [
    "id",
    "page_title",
    "page_header",
    "page_description",
    "vr_header",
    "vr.video_links_id.*.*",
    "editing_header",
    "editing.video_links_id.*.*",
    "commercial_header",
    "commercial.video_links_id.*.*",
  ],
});

console.log(
  "Videos",
  videos?.commercial[0].video_links_id.link.split("?")[0].split("/").at(-1)
);
---

<Layout title={videos?.page_title ?? "Video"}>
  <div class="mx-4 md:mx-8">
    {
      videos?.page_header && (
        <PageHeader
          header={videos?.page_header}
          description={videos?.page_description}
        />
      )
    }
    <div id="videos" class="mt-8">
      {
        videos?.vr && (
          <div id="vr" class="text-2xl text-center font-bold text-highlight">
            {videos?.vr_header && <h3>{videos.vr_header}</h3>}
            <div class="flex flex-wrap gap-4 justify-center items-center mt-8">
              {videos.vr.map((vr) => {
                return (
                  <div class="rounded overflow-hidden">
                    <Video videoData={vr.video_links_id} />
                  </div>
                );
              })}
            </div>
          </div>
        )
      }
      {
        videos?.editing && (
          <div
            id="editing"
            class="text-2xl text-center font-bold text-highlight mt-8"
          >
            {videos?.editing_header && <h3>{videos.editing_header}</h3>}
            <div class="flex flex-wrap gap-4 justify-center items-center mt-8">
              {videos.editing.map((edit) => {
                return (
                  <div class="rounded overflow-hidden">
                    <Video videoData={edit.video_links_id} />
                  </div>
                );
              })}
            </div>
          </div>
        )
      }
      {
        videos?.commercial && (
          <div
            id="commercial"
            class="text-2xl text-center font-bold text-highlight mt-8"
          >
            {videos?.commercial_header && <h3>{videos.commercial_header}</h3>}
            <div class="flex flex-wrap gap-4 justify-center items-center mt-8">
              {videos.commercial.map((commercial: API_Video) => {
                return (
                  <div class="rounded overflow-hidden">
                    <Video videoData={commercial.video_links_id} />
                  </div>
                );
              })}
            </div>
          </div>
        )
      }
    </div>
  </div>
</Layout>
